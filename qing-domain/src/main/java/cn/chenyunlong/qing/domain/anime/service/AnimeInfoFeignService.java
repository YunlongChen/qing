/*
 * Copyright (c) 2019-2023  YunLong Chen
 * Project Qing is licensed under Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *          https://license.coscl.org.cn/MulanPSL2
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 *
 */

// ---Auto Generated by Qing-Generator ---
package cn.chenyunlong.qing.domain.anime.service;

import cn.chenyunlong.common.model.JsonResult;
import cn.chenyunlong.common.model.PageRequestWrapper;
import cn.chenyunlong.common.model.PageResult;
import cn.chenyunlong.qing.domain.anime.request.AnimeInfoCreateRequest;
import cn.chenyunlong.qing.domain.anime.request.AnimeInfoQueryRequest;
import cn.chenyunlong.qing.domain.anime.request.AnimeInfoUpdateRequest;
import cn.chenyunlong.qing.domain.anime.response.AnimeInfoResponse;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

@FeignClient(
    value = "xxxSrv",
    contextId = "animeInfoClient",
    path = "animeInfo/v1"
)
public interface AnimeInfoFeignService {
  /**
   * createRequest
   */
  @PostMapping("createAnimeInfo")
  JsonResult<Long> createAnimeInfo(@RequestBody AnimeInfoCreateRequest request);

  /**
   * update request
   */
  @PostMapping("updateAnimeInfo")
  JsonResult<String> updateAnimeInfo(@RequestBody AnimeInfoUpdateRequest request);

  /**
   * valid
   */
  @PostMapping("valid/{id}")
  JsonResult<String> validAnimeInfo(@PathVariable("id") Long id);

  /**
   * invalid
   */
  @PostMapping("invalid/{id}")
  JsonResult<String> invalidAnimeInfo(@PathVariable("id") Long id);

  /**
   * findById
   */
  @GetMapping("findById/{id}")
  JsonResult<AnimeInfoResponse> findById(@PathVariable("id") Long id);

  /**
   * findByPage request
   */
  @PostMapping("findByPage")
  JsonResult<PageResult<AnimeInfoResponse>> findByPage(
      @RequestBody PageRequestWrapper<AnimeInfoQueryRequest> request);
}
