// ---Auto Generated by Qing-Generator --
package cn.chenyunlong.qing.domain.attachement.service;

import cn.chenyunlong.common.model.JsonResult;
import cn.chenyunlong.common.model.PageRequestWrapper;
import cn.chenyunlong.common.model.PageResult;
import cn.chenyunlong.qing.domain.attachement.request.AttachementCreateRequest;
import cn.chenyunlong.qing.domain.attachement.request.AttachementQueryRequest;
import cn.chenyunlong.qing.domain.attachement.request.AttachementUpdateRequest;
import cn.chenyunlong.qing.domain.attachement.response.AttachementResponse;
import java.lang.Long;
import java.lang.String;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

@FeignClient(
        value = "stanic",
        contextId = "attachementClient",
        path = "attachement/v1"
)
public interface AttachementFeignService {
    /**
     * createRequest
     */
    @PostMapping("createAttachement")
    JsonResult<Long> createAttachement(@RequestBody AttachementCreateRequest request);

    /**
     * update request
     */
    @PostMapping("updateAttachement")
    JsonResult<String> updateAttachement(@RequestBody AttachementUpdateRequest request);

    /**
     * valid
     */
    @PostMapping("valid/{id}")
    JsonResult<String> validAttachement(@PathVariable("id") Long id);

    /**
     * invalid
     */
    @PostMapping("invalid/{id}")
    JsonResult<String> invalidAttachement(@PathVariable("id") Long id);

    /**
     * findById
     */
    @GetMapping("findById/{id}")
    JsonResult<AttachementResponse> findById(@PathVariable("id") Long id);

    /**
     * findByPage request
     */
    @PostMapping("findByPage")
    JsonResult<PageResult<AttachementResponse>> findByPage(
            @RequestBody PageRequestWrapper<AttachementQueryRequest> request);
}
