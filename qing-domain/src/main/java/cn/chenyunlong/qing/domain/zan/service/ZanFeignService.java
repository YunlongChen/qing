// ---Auto Generated by Qing-Generator --

package cn.chenyunlong.qing.domain.zan.service;

import cn.chenyunlong.common.model.JsonResult;
import cn.chenyunlong.common.model.PageRequestWrapper;
import cn.chenyunlong.common.model.PageResult;
import cn.chenyunlong.qing.domain.zan.request.ZanCreateRequest;
import cn.chenyunlong.qing.domain.zan.request.ZanQueryRequest;
import cn.chenyunlong.qing.domain.zan.request.ZanUpdateRequest;
import cn.chenyunlong.qing.domain.zan.response.ZanResponse;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

@FeignClient(
    value = "stanic",
    contextId = "zanClient",
    path = "zan/v1"
)
public interface ZanFeignService {
    /**
     * createRequest
     */
    @PostMapping("createZan")
    JsonResult<Long> createZan(@RequestBody ZanCreateRequest request);

    /**
     * update request
     */
    @PostMapping("updateZan")
    JsonResult<String> updateZan(@RequestBody ZanUpdateRequest request);

    /**
     * valid
     */
    @PostMapping("valid/{id}")
    JsonResult<String> validZan(@PathVariable("id") Long id);

    /**
     * invalid
     */
    @PostMapping("invalid/{id}")
    JsonResult<String> invalidZan(@PathVariable("id") Long id);

    /**
     * findById
     */
    @GetMapping("findById/{id}")
    JsonResult<ZanResponse> findById(@PathVariable("id") Long id);

    /**
     * findByPage request
     */
    @PostMapping("findByPage")
    JsonResult<PageResult<ZanResponse>> findByPage(
        @RequestBody PageRequestWrapper<ZanQueryRequest> request);
}
