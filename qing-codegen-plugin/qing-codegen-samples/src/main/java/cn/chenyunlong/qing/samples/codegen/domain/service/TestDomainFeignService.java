// ---Auto Generated by Qing-Generator --

package cn.chenyunlong.qing.samples.codegen.domain.service;

import cn.chenyunlong.common.model.JsonResult;
import cn.chenyunlong.common.model.PageRequestWrapper;
import cn.chenyunlong.common.model.PageResult;
import cn.chenyunlong.qing.samples.codegen.domain.request.TestDomainCreateRequest;
import cn.chenyunlong.qing.samples.codegen.domain.request.TestDomainQueryRequest;
import cn.chenyunlong.qing.samples.codegen.domain.request.TestDomainUpdateRequest;
import cn.chenyunlong.qing.samples.codegen.domain.response.TestDomainResponse;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

@FeignClient(
    value = "xxxSrv",
    contextId = "testDomainClient",
    path = "testDomain/v1"
)
public interface TestDomainFeignService {
    /**
     * createRequest
     */
    @PostMapping("createTestDomain")
    JsonResult<Long> createTestDomain(@RequestBody TestDomainCreateRequest request);

    /**
     * update request
     */
    @PostMapping("updateTestDomain")
    JsonResult<String> updateTestDomain(@RequestBody TestDomainUpdateRequest request);

    /**
     * valid
     */
    @PostMapping("valid/{id}")
    JsonResult<String> validTestDomain(@PathVariable("id") Long id);

    /**
     * invalid
     */
    @PostMapping("invalid/{id}")
    JsonResult<String> invalidTestDomain(@PathVariable("id") Long id);

    /**
     * findById
     */
    @GetMapping("findById/{id}")
    JsonResult<TestDomainResponse> findById(@PathVariable("id") Long id);

    /**
     * findByPage request
     */
    @PostMapping("findByPage")
    JsonResult<PageResult<TestDomainResponse>> findByPage(
        @RequestBody PageRequestWrapper<TestDomainQueryRequest> request);
}
