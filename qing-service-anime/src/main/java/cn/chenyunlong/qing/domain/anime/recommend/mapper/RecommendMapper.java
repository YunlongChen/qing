// ---Auto Generated by Qing-Generator ---
package cn.chenyunlong.qing.domain.anime.recommend.mapper;

import cn.chenyunlong.common.mapper.DateMapper;
import cn.chenyunlong.common.mapper.GenericEnumMapper;
import cn.chenyunlong.qing.domain.anime.recommend.Recommend;
import cn.chenyunlong.qing.domain.anime.recommend.creator.RecommendCreator;
import cn.chenyunlong.qing.domain.anime.recommend.query.RecommendQuery;
import cn.chenyunlong.qing.domain.anime.recommend.request.RecommendCreateRequest;
import cn.chenyunlong.qing.domain.anime.recommend.request.RecommendQueryRequest;
import cn.chenyunlong.qing.domain.anime.recommend.request.RecommendUpdateRequest;
import cn.chenyunlong.qing.domain.anime.recommend.response.RecommendResponse;
import cn.chenyunlong.qing.domain.anime.recommend.updater.RecommendUpdater;
import cn.chenyunlong.qing.domain.anime.recommend.vo.RecommendVO;
import org.mapstruct.Mapper;
import org.mapstruct.ReportingPolicy;
import org.mapstruct.factory.Mappers;

@Mapper(
        uses = {
                GenericEnumMapper.class,
                DateMapper.class
        },
        unmappedTargetPolicy = ReportingPolicy.IGNORE
)
public interface RecommendMapper {
    RecommendMapper INSTANCE = Mappers.getMapper(RecommendMapper.class);

    Recommend dtoToEntity(RecommendCreator dto);

    RecommendUpdater request2Updater(RecommendUpdateRequest request);

    RecommendCreator request2Dto(RecommendCreateRequest request);

    RecommendQuery request2Query(RecommendQueryRequest request);

    RecommendResponse vo2Response(RecommendVO vo);

    default RecommendResponse vo2CustomResponse(RecommendVO vo) {
        return vo2Response(vo);
    }
}
