/*
 * Copyright (c) 2023  YunLong Chen
 * Project Qing is licensed under Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *          http://license.coscl.org.cn/MulanPSL2
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 *
 */

// ---Auto Generated by Qing-Generator ---
package cn.chenyunlong.qing.domain.anime.lifecycle.vo;

import cn.chenyunlong.common.model.AbstractBaseJpaVO;
import cn.chenyunlong.qing.domain.anime.anime.domainservice.model.meta.InOutBizType;
import cn.chenyunlong.qing.domain.anime.anime.domainservice.model.meta.InOutType;
import cn.chenyunlong.qing.domain.anime.lifecycle.AnimeLifeCycle;
import cn.hutool.core.bean.BeanUtil;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.AccessLevel;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;

@Schema
@Data
@EqualsAndHashCode(
        callSuper = true
)
@NoArgsConstructor(
        access = AccessLevel.PROTECTED
)
public class AnimeLifeCycleVO extends AbstractBaseJpaVO {
    @Schema(
            title = "name",
            description = "资产名称"
    )
    private String name;

    @Schema(
            title = "assetsId",
            description = "资产Id"
    )
    private Long assetsId;

    @Schema(
            title = "skuId",
            description = "skuId"
    )
    private Long skuId;

    @Schema(
            title = "uniqueCode",
            description = "唯一编码"
    )
    private String uniqueCode;

    @Schema(
            title = "houseName",
            description = "仓库名称"
    )
    private String houseName;

    @Schema(
            title = "houseId",
            description = "仓库id"
    )
    private Long houseId;

    @Schema(
            title = "inOutBizType",
            description = "出入库业务类型"
    )
    private InOutBizType inOutBizType;

    @Schema(
            title = "inOutType",
            description = "出入类型"
    )
    private InOutType inOutType;

    @Schema(
            title = "operateUser",
            description = "操作人"
    )
    private String operateUser;

    @Schema(
            title = "genBatchNo",
            description = "唯一批次号"
    )
    private String genBatchNo;

    @Schema(
            title = "batchNo",
            description = "批次号"
    )
    private String batchNo;

    public AnimeLifeCycleVO(AnimeLifeCycle source) {
        super();
        BeanUtil.copyProperties(source, this);
    }
}
