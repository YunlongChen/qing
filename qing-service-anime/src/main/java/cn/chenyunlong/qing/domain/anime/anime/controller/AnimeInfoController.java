// ---Auto Generated by Project Qing ---
package cn.chenyunlong.qing.domain.anime.anime.controller;

import cn.chenyunlong.common.constants.CodeEnum;
import cn.chenyunlong.common.model.JsonObject;
import cn.chenyunlong.common.model.PageRequestWrapper;
import cn.chenyunlong.common.model.PageResult;
import cn.chenyunlong.qing.domain.anime.anime.creator.AnimeInfoCreator;
import cn.chenyunlong.qing.domain.anime.anime.mapper.AnimeInfoMapper;
import cn.chenyunlong.qing.domain.anime.anime.query.AnimeInfoQuery;
import cn.chenyunlong.qing.domain.anime.anime.request.AnimeInfoCreateRequest;
import cn.chenyunlong.qing.domain.anime.anime.request.AnimeInfoQueryRequest;
import cn.chenyunlong.qing.domain.anime.anime.request.AnimeInfoUpdateRequest;
import cn.chenyunlong.qing.domain.anime.anime.response.AnimeInfoResponse;
import cn.chenyunlong.qing.domain.anime.anime.service.IAnimeInfoService;
import cn.chenyunlong.qing.domain.anime.anime.updater.AnimeInfoUpdater;
import cn.chenyunlong.qing.domain.anime.anime.vo.AnimeInfoVO;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.data.domain.Page;
import org.springframework.web.bind.annotation.*;

import java.util.stream.Collectors;

@RestController
@Slf4j
@RequestMapping("api/v1/anime")
@Tag(name = "动漫信息", description = "动漫信息")
@RequiredArgsConstructor
public class AnimeInfoController {
    private final IAnimeInfoService animeInfoService;

    @Operation(summary = "添加动漫信息")
    @PostMapping
    public JsonObject<Long> createAnimeInfo(@RequestBody AnimeInfoCreateRequest request) {
        AnimeInfoCreator creator = AnimeInfoMapper.INSTANCE.request2Dto(request);
        return JsonObject.success(animeInfoService.createAnimeInfo(creator));
    }

    @Operation(summary = "更新动漫信息")
    @PostMapping("{animeId}")
    public JsonObject<String> updateAnimeInfo(
            @PathVariable(name = "animeId") String animeId,
            @RequestBody AnimeInfoUpdateRequest request) {
        AnimeInfoUpdater updater = AnimeInfoMapper.INSTANCE.request2Updater(request);
        animeInfoService.updateAnimeInfo(updater);
        return JsonObject.success(CodeEnum.Success.getName());
    }

    /**
     * valid
     */
    @PostMapping("{animeId}/valid")
    public JsonObject<String> validAnimeInfo(@PathVariable Long animeId) {
        animeInfoService.validAnimeInfo(animeId);
        return JsonObject.success(CodeEnum.Success.getName());
    }

    /**
     * invalid
     */
    @PostMapping("{animeId}/invalid")
    public JsonObject<String> invalidAnimeInfo(@PathVariable Long animeId) {
        animeInfoService.invalidAnimeInfo(animeId);
        return JsonObject.success(CodeEnum.Success.getName());
    }

    /**
     * findById
     */
    @GetMapping("{animeId}")
    public JsonObject<AnimeInfoResponse> findById(@PathVariable Long animeId) {
        AnimeInfoVO vo = animeInfoService.findById(animeId);
        AnimeInfoResponse response = AnimeInfoMapper.INSTANCE.vo2CustomResponse(vo);
        return JsonObject.success(response);
    }

    /**
     * findByPage request
     */
    @PostMapping("findByPage")
    public JsonObject<PageResult<AnimeInfoResponse>> findByPage(
            @RequestBody PageRequestWrapper<AnimeInfoQueryRequest> request) {
        PageRequestWrapper<AnimeInfoQuery> wrapper = new PageRequestWrapper<>();
        wrapper.setBean(AnimeInfoMapper.INSTANCE.request2Query(request.getBean()));
        wrapper.setSorts(request.getSorts());
        wrapper.setPageSize(request.getPageSize());
        wrapper.setPage(request.getPage());
        Page<AnimeInfoVO> page = animeInfoService.findByPage(wrapper);
        return JsonObject.success(
                PageResult.of(
                        page.getContent().stream()
                                .map(AnimeInfoMapper.INSTANCE::vo2CustomResponse)
                                .collect(Collectors.toList()),
                        page.getTotalElements(),
                        page.getSize(),
                        page.getNumber())
        );
    }
}
