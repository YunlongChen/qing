/*
 * Copyright (c) 2023  YunLong Chen
 * Project Qing is licensed under Mulan PSL v2.
 * You can use this software according to the terms and conditions of the Mulan PSL v2.
 * You may obtain a copy of Mulan PSL v2 at:
 *          http://license.coscl.org.cn/MulanPSL2
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
 * EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
 * MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v2 for more details.
 *
 */

// ---Auto Generated by Qing-Generator ---
package cn.chenyunlong.qing.domain.system.job.log.updater;

import cn.chenyunlong.qing.domain.system.job.log.SysJobLog;
import io.swagger.v3.oas.annotations.media.Schema;

import java.lang.Long;
import java.lang.String;
import java.util.Date;
import java.util.Optional;

import lombok.Data;

@Schema
@Data
public class SysJobLogUpdater {
    @Schema(
            title = "JobLogId",
            description = "jobLogId"
    )
    private Long jobLogId;

    @Schema(
            title = "JobName",
            description = "jobName"
    )
    private String jobName;

    @Schema(
            title = "JobGroup",
            description = "jobGroup"
    )
    private String jobGroup;

    @Schema(
            title = "InvokeTarget",
            description = "invokeTarget"
    )
    private String invokeTarget;

    @Schema(
            title = "JobMessage",
            description = "jobMessage"
    )
    private String jobMessage;

    @Schema(
            title = "Status",
            description = "status"
    )
    private String status;

    @Schema(
            title = "ExceptionInfo",
            description = "exceptionInfo"
    )
    private String exceptionInfo;

    @Schema(
            title = "StartTime",
            description = "startTime"
    )
    private Date startTime;

    @Schema(
            title = "EndTime",
            description = "endTime"
    )
    private Date endTime;

    private Long id;

    public void updateSysJobLog(SysJobLog param) {
        Optional.ofNullable(getJobLogId()).ifPresent(v -> param.setJobLogId(v));
        Optional.ofNullable(getJobName()).ifPresent(v -> param.setJobName(v));
        Optional.ofNullable(getJobGroup()).ifPresent(v -> param.setJobGroup(v));
        Optional.ofNullable(getInvokeTarget()).ifPresent(v -> param.setInvokeTarget(v));
        Optional.ofNullable(getJobMessage()).ifPresent(v -> param.setJobMessage(v));
        Optional.ofNullable(getStatus()).ifPresent(v -> param.setStatus(v));
        Optional.ofNullable(getExceptionInfo()).ifPresent(v -> param.setExceptionInfo(v));
        Optional.ofNullable(getStartTime()).ifPresent(v -> param.setStartTime(v));
        Optional.ofNullable(getEndTime()).ifPresent(v -> param.setEndTime(v));
    }
}
