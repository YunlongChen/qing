// ---Auto Generated by Qing-Generator ---
package cn.chenyunlong.qing.domain.user.user.updater;

import cn.chenyunlong.qing.domain.user.user.User;
import cn.chenyunlong.qing.infrastructure.enums.MFAType;
import io.swagger.v3.oas.annotations.media.Schema;

import java.lang.Long;
import java.lang.String;
import java.time.LocalDateTime;
import java.util.Optional;

import lombok.Data;

@Schema
@Data
public class UserUpdater {
    @Schema(
            title = "Uid",
            description = "uid"
    )
    private Long uid;

    @Schema(
            title = "Username",
            description = "username"
    )
    private String username;

    @Schema(
            title = "Nickname",
            description = "nickname"
    )
    private String nickname;

    @Schema(
            title = "Password",
            description = "password"
    )
    private String password;

    @Schema(
            title = "Phone",
            description = "phone"
    )
    private String phone;

    @Schema(
            title = "Email",
            description = "email"
    )
    private String email;

    @Schema(
            title = "Avatar",
            description = "avatar"
    )
    private String avatar;

    @Schema(
            title = "Description",
            description = "description"
    )
    private String description;

    @Schema(
            title = "ExpireTime",
            description = "expireTime"
    )
    private LocalDateTime expireTime;

    @Schema(
            title = "MfaType",
            description = "mfaType"
    )
    private MFAType mfaType;

    @Schema(
            title = "MfaKey",
            description = "mfaKey"
    )
    private String mfaKey;

    private Long id;

    public void updateUser(User param) {
        Optional.ofNullable(getUid()).ifPresent(v -> param.setUid(v));
        Optional.ofNullable(getUsername()).ifPresent(v -> param.setUsername(v));
        Optional.ofNullable(getNickname()).ifPresent(v -> param.setNickname(v));
        Optional.ofNullable(getPassword()).ifPresent(v -> param.setPassword(v));
        Optional.ofNullable(getPhone()).ifPresent(v -> param.setPhone(v));
        Optional.ofNullable(getEmail()).ifPresent(v -> param.setEmail(v));
        Optional.ofNullable(getAvatar()).ifPresent(v -> param.setAvatar(v));
        Optional.ofNullable(getDescription()).ifPresent(v -> param.setDescription(v));
        Optional.ofNullable(getExpireTime()).ifPresent(v -> param.setExpireTime(v));
        Optional.ofNullable(getMfaType()).ifPresent(v -> param.setMfaType(v));
        Optional.ofNullable(getMfaKey()).ifPresent(v -> param.setMfaKey(v));
    }
}
