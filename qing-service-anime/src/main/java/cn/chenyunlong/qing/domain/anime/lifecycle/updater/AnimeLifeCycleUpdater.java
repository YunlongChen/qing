// ---Auto Generated by Qing-Generator ---
package cn.chenyunlong.qing.domain.anime.lifecycle.updater;

import cn.chenyunlong.qing.domain.anime.anime.domainservice.model.meta.InOutBizType;
import cn.chenyunlong.qing.domain.anime.anime.domainservice.model.meta.InOutType;
import cn.chenyunlong.qing.domain.anime.lifecycle.AnimeLifeCycle;
import io.swagger.v3.oas.annotations.media.Schema;

import java.lang.Long;
import java.lang.String;
import java.util.Optional;

import lombok.Data;

@Schema
@Data
public class AnimeLifeCycleUpdater {
    @Schema(
            title = "name",
            description = "资产名称"
    )
    private String name;

    @Schema(
            title = "assetsId",
            description = "资产Id"
    )
    private Long assetsId;

    @Schema(
            title = "skuId",
            description = "skuId"
    )
    private Long skuId;

    @Schema(
            title = "uniqueCode",
            description = "唯一编码"
    )
    private String uniqueCode;

    @Schema(
            title = "houseName",
            description = "仓库名称"
    )
    private String houseName;

    @Schema(
            title = "houseId",
            description = "仓库id"
    )
    private Long houseId;

    @Schema(
            title = "inOutBizType",
            description = "出入库业务类型"
    )
    private InOutBizType inOutBizType;

    @Schema(
            title = "inOutType",
            description = "出入类型"
    )
    private InOutType inOutType;

    @Schema(
            title = "operateUser",
            description = "操作人"
    )
    private String operateUser;

    @Schema(
            title = "genBatchNo",
            description = "唯一批次号"
    )
    private String genBatchNo;

    @Schema(
            title = "batchNo",
            description = "批次号"
    )
    private String batchNo;

    private Long id;

    public void updateAnimeLifeCycle(AnimeLifeCycle param) {
        Optional.ofNullable(getName()).ifPresent(param::setName);
        Optional.ofNullable(getAssetsId()).ifPresent(param::setAssetsId);
        Optional.ofNullable(getSkuId()).ifPresent(param::setSkuId);
        Optional.ofNullable(getUniqueCode()).ifPresent(param::setUniqueCode);
        Optional.ofNullable(getHouseName()).ifPresent(param::setHouseName);
        Optional.ofNullable(getHouseId()).ifPresent(param::setHouseId);
        Optional.ofNullable(getInOutBizType()).ifPresent(param::setInOutBizType);
        Optional.ofNullable(getInOutType()).ifPresent(param::setInOutType);
        Optional.ofNullable(getOperateUser()).ifPresent(param::setOperateUser);
        Optional.ofNullable(getGenBatchNo()).ifPresent(param::setGenBatchNo);
        Optional.ofNullable(getBatchNo()).ifPresent(param::setBatchNo);
    }
}
