// ---Auto Generated by Qing-Generator ---
package cn.chenyunlong.qing.domain.system.job.log.service;

import cn.chenyunlong.common.model.JsonResult;
import cn.chenyunlong.common.model.PageRequestWrapper;
import cn.chenyunlong.common.model.PageResult;
import cn.chenyunlong.qing.domain.system.job.log.request.SysJobLogCreateRequest;
import cn.chenyunlong.qing.domain.system.job.log.request.SysJobLogQueryRequest;
import cn.chenyunlong.qing.domain.system.job.log.request.SysJobLogUpdateRequest;
import cn.chenyunlong.qing.domain.system.job.log.response.SysJobLogResponse;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

@FeignClient(
        value = "xxxSrv",
        contextId = "sysJobLogClient",
        path = "sysJobLog/v1"
)
public interface SysJobLogFeignService {
    /**
     * createRequest
     */
    @PostMapping("createSysJobLog")
    JsonResult<Long> createSysJobLog(@RequestBody SysJobLogCreateRequest request);

    /**
     * update request
     */
    @PostMapping("updateSysJobLog")
    JsonResult<String> updateSysJobLog(@RequestBody SysJobLogUpdateRequest request);

    /**
     * valid
     */
    @PostMapping("valid/{id}")
    JsonResult<String> validSysJobLog(@PathVariable("id") Long id);

    /**
     * invalid
     */
    @PostMapping("invalid/{id}")
    JsonResult<String> invalidSysJobLog(@PathVariable("id") Long id);

    /**
     * findById
     */
    @GetMapping("findById/{id}")
    JsonResult<SysJobLogResponse> findById(@PathVariable("id") Long id);

    /**
     * findByPage request
     */
    @PostMapping("findByPage")
    JsonResult<PageResult<SysJobLogResponse>> findByPage(
            @RequestBody PageRequestWrapper<SysJobLogQueryRequest> request);
}
