// ---Auto Generated by Qing-Generator ---
package cn.chenyunlong.qing.domain.system.version.service;

import cn.chenyunlong.common.model.JsonResult;
import cn.chenyunlong.common.model.PageRequestWrapper;
import cn.chenyunlong.common.model.PageResult;
import cn.chenyunlong.qing.domain.system.version.request.VersionCreateRequest;
import cn.chenyunlong.qing.domain.system.version.request.VersionQueryRequest;
import cn.chenyunlong.qing.domain.system.version.request.VersionUpdateRequest;
import cn.chenyunlong.qing.domain.system.version.response.VersionResponse;

import java.lang.Long;
import java.lang.String;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

@FeignClient(
        value = "xxxSrv",
        contextId = "versionClient",
        path = "version/v1"
)
public interface VersionFeignService {
    /**
     * createRequest
     */
    @PostMapping("createVersion")
    JsonResult<Long> createVersion(@RequestBody VersionCreateRequest request);

    /**
     * update request
     */
    @PostMapping("updateVersion")
    JsonResult<String> updateVersion(@RequestBody VersionUpdateRequest request);

    /**
     * valid
     */
    @PostMapping("valid/{id}")
    JsonResult<String> validVersion(@PathVariable("id") Long id);

    /**
     * invalid
     */
    @PostMapping("invalid/{id}")
    JsonResult<String> invalidVersion(@PathVariable("id") Long id);

    /**
     * findById
     */
    @GetMapping("findById/{id}")
    JsonResult<VersionResponse> findById(@PathVariable("id") Long id);

    /**
     * findByPage request
     */
    @PostMapping("findByPage")
    JsonResult<PageResult<VersionResponse>> findByPage(
            @RequestBody PageRequestWrapper<VersionQueryRequest> request);
}
