// ---Auto Generated by Qing-Generator ---
package cn.chenyunlong.qing.domain.permission.service;

import cn.chenyunlong.common.model.JsonResult;
import cn.chenyunlong.common.model.PageRequestWrapper;
import cn.chenyunlong.common.model.PageResult;
import cn.chenyunlong.qing.domain.permission.request.PermissionCreateRequest;
import cn.chenyunlong.qing.domain.permission.request.PermissionQueryRequest;
import cn.chenyunlong.qing.domain.permission.request.PermissionUpdateRequest;
import cn.chenyunlong.qing.domain.permission.response.PermissionResponse;
import java.lang.Long;
import java.lang.String;
import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;

@FeignClient(
        value = "xxxSrv",
        contextId = "permissionClient",
        path = "permission/v1"
)
public interface PermissionFeignService {
    /**
     * createRequest
     */
    @PostMapping("createPermission")
    JsonResult<Long> createPermission(@RequestBody PermissionCreateRequest request);

    /**
     * update request
     */
    @PostMapping("updatePermission")
    JsonResult<String> updatePermission(@RequestBody PermissionUpdateRequest request);

    /**
     * valid
     */
    @PostMapping("valid/{id}")
    JsonResult<String> validPermission(@PathVariable("id") Long id);

    /**
     * invalid
     */
    @PostMapping("invalid/{id}")
    JsonResult<String> invalidPermission(@PathVariable("id") Long id);

    /**
     * findById
     */
    @GetMapping("findById/{id}")
    JsonResult<PermissionResponse> findById(@PathVariable("id") Long id);

    /**
     * findByPage request
     */
    @PostMapping("findByPage")
    JsonResult<PageResult<PermissionResponse>> findByPage(
            @RequestBody PageRequestWrapper<PermissionQueryRequest> request);
}
