// ---Auto Generated by Qing-Generator ---
package cn.chenyunlong.qing.domain.anime.type.mapper;

import cn.chenyunlong.common.mapper.DateMapper;
import cn.chenyunlong.common.mapper.GenericEnumMapper;
import cn.chenyunlong.qing.domain.anime.type.AnimeType;
import cn.chenyunlong.qing.domain.anime.type.creator.AnimeTypeCreator;
import cn.chenyunlong.qing.domain.anime.type.query.AnimeTypeQuery;
import cn.chenyunlong.qing.domain.anime.type.request.AnimeTypeCreateRequest;
import cn.chenyunlong.qing.domain.anime.type.request.AnimeTypeQueryRequest;
import cn.chenyunlong.qing.domain.anime.type.request.AnimeTypeUpdateRequest;
import cn.chenyunlong.qing.domain.anime.type.response.AnimeTypeResponse;
import cn.chenyunlong.qing.domain.anime.type.updater.AnimeTypeUpdater;
import cn.chenyunlong.qing.domain.anime.type.vo.AnimeTypeVO;
import org.mapstruct.Mapper;
import org.mapstruct.ReportingPolicy;
import org.mapstruct.factory.Mappers;

@Mapper(
        uses = {
                GenericEnumMapper.class,
                DateMapper.class
        },
        unmappedTargetPolicy = ReportingPolicy.IGNORE
)
public interface AnimeTypeMapper {
    AnimeTypeMapper INSTANCE = Mappers.getMapper(AnimeTypeMapper.class);

    AnimeType dtoToEntity(AnimeTypeCreator dto);

    AnimeTypeUpdater request2Updater(AnimeTypeUpdateRequest request);

    AnimeTypeCreator request2Dto(AnimeTypeCreateRequest request);

    AnimeTypeQuery request2Query(AnimeTypeQueryRequest request);

    AnimeTypeResponse vo2Response(AnimeTypeVO vo);

    default AnimeTypeResponse vo2CustomResponse(AnimeTypeVO vo) {
        return vo2Response(vo);
    }
}
